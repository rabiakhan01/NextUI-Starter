<ToggleSwitch
            startContent={<p>yes</p>}
            endContent={<p>no</p>}
            size=""
            selected={isSelected}
            color='success'
            className={
              {
                wrapper: "group-data-[selected]:pl-5 h-[34px] w-[65px] !uppercase",
                startContent: "!text-[20px] text-white",
                endContent: "!text-[20px] !text-white",
              }
            }
            onValueChange={handelOnValueChange}
            thumbIcon={isSelected
              ?
              <LightModeIcon sx={{
                width: '10px',
                height: '10px'
              }} />
              :
              <DarkModeIcon sx={{
                width: '10px',
                height: '10px'
              }} />}
          />

          <ToggleSwitch
            startContent={<LightModeIcon />}
            endContent={<DarkModeIcon />}
            size="xl"
            color='warning'
            className={
              {
                wrapper: "group-data-[selected]:pl-5 h-[34px] w-[65px] !uppercase",
                startContent: "!text-[20px] text-white",
                endContent: "!text-[20px] !text-white",
              }
            }
          />

          <div className={`h-16 w-64 flex justify-end rounded-xl border-2 border-lime-200 ${isSelected ? 'bg-white' : 'bg-zinc-700'}`}>
            <ToggleSwitch
              startContent={<LightModeIcon />}
              endContent={<DarkModeIcon />}
              selected={isSelected}
              onValueChange={handelOnValueChange}
              color='secondary'
              className={
                {
                  wrapper: "group-data-[selected]:pl-2 h-[34px] w-[55px] !uppercase",
                  startContent: "!text-[20px]",
                  endContent: "!text-[20px]",
                }
              }
            />
          </div>
          <div className={`h-16 w-64 flex justify-end rounded-xl border-2 border-lime-200 ml-2 ${isSelected ? 'bg-white' : 'bg-zinc-700'}`}>
            <ToggleSwitch
              startContent={<LightModeIcon />}
              endContent={<DarkModeIcon />}
              selected={isSelected}
              onValueChange={handelOnValueChange}
              color='warning'
              className={
                {
                  wrapper: "h-[34px] w-[34px] rounded-lg ",
                  startContent: " text-white",
                  thumb: "hidden",
                  endContent: " text-black",
                }
              }
            />
          </div>

//select 

<div className='m-4'>
          <Select
            endContent={isSelected && <Close onClick={handelCross} sx={{ color: 'green' }} />}
            isOpen={isSelectOpen}
            onSelectionChange={handelSelectItem}
            color= "white"
            className={{
              base: "border-1 border-grayColor !bg-white !rounded-md",
              trigger: "border-1 border-grayColor !bg-white !rounded-md"
            }}
            onClick={handelClick}
          >
            {

              animals.map((animal) => (
                <SelectItem
                  key={animal.key}
                  textValue={value}
                  selectedIcon={isSelected ? false : true}
                >
                  {animal.label}
                </SelectItem>
              ))
            }
          </Select>
        </div>
const handelClick = (event) => {
    setIsSelectOpen(!isSelectOpen)
  }
  const handelSelectItem = (event) => {
    setValue(event.currentKey)
    setIsSelectOpen(false)
    setIsSelected(true)
  }
  const handelCross = (event) => {
    event.stopPropagation()
    setIsSelectOpen(false)
    setValue(" ")
    setIsSelected(false)
  }
    const [value, setValue] = useState('');
      
         <Accordion variant="splitted"
            className='!bg-white'
            motionProps={{
              variants: {

                enter: {
                  y: 0,
                  opacity: 1,
                  height: "auto",
                  transition: {
                    height: {
                      duration: 2,
                    },
                    opacity: {
                      easings: "linear",
                      duration: 2,
                    },
                  },
                },
                exit: {
                  y: -10,
                  opacity: 0,
                  height: 0,
                  transition: {
                    height: {
                      easings: "ease",
                      duration: 2,
                    },
                    opacity: {
                      easings: "ease",
                      duration: 0.3,
                    },
                  },
                },
              },
            }}
          >
            <AccordionItem
              key="1"
              title={<div className='flex justify-between'>
                <p>Accordion 1</p>
                <span className='bg-red-400 rounded-md p-1' onClick={(event) => { event.stopPropagation() }}>Press Me</span>
              </div>}
              classNames={{
                title: "!pl-6",
                base: "!rounded-md !relative !shadow-none !border-1 !border-grayColor !p-0 group-data-[pressed=true]:!border-4 ",
                heading: "!px-4",
                indicator: "!rotate-90 data-[open=true]:!-rotate-90 !absolute",
              }}
              onPress={handelAccordion}
            >
              <hr></hr>
              <p className='p-4'>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean
                a mauris ligula. Ut viverra hendrerit tellus, eget malesuada
                metus tempor quis. Pellentesque non nisi non diam feugiat placerat
                faucibus nec tortor. Vestibulum vitae felis nec nisi pellentesque
                pharetra. Curabitur tincidunt velit lectus, in egestas quam pharetra vitae.
                Curabitur hendrerit, sem a sollicitudin euismod, risus quam mollis felis,
                a hendrerit felis magna et neque. Duis accumsan sapien magna. Nam nec lacus nunc
                Nunc accumsan ultrices eros, id tempus sapien. Morbi tincidunt dolor sed augue
                volutpat gravida. Pellentesque ut accumsan tortor, iaculis porta tellus. Maecenas
                rutrum iaculis massa, quis efficitur tellus convallis ut. Etiam fringilla leo lorem,
                id ultrices risus euismod a
              </p>
            </AccordionItem>
            <AccordionItem
              key="2"
              title={<div className='flex justify-between'>
                <p>Accordion 2</p>
                <span className='bg-red-400 rounded-md p-1' onClick={(event) => { event.stopPropagation() }}>Press Me</span>
              </div>}
              classNames={{
                title: "!pl-6",
                base: "!rounded-md !relative !shadow-none !border-1 !border-grayColor !p-0 !bg-white",
                heading: "!px-4",
                indicator: "!rotate-90 data-[open=true]:!-rotate-90 !absolute",
              }}
              onPress={handelAccordion}
            >
              <hr></hr>
              <p className='p-4'>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean
                a mauris ligula. Ut viverra hendrerit tellus, eget malesuada
                metus tempor quis. Pellentesque non nisi non diam feugiat placerat
                faucibus nec tortor. Vestibulum vitae felis nec nisi pellentesque
                pharetra. Curabitur tincidunt velit lectus, in egestas quam pharetra vitae.
                Curabitur hendrerit, sem a sollicitudin euismod, risus quam mollis felis,
                a hendrerit felis magna et neque. Duis accumsan sapien magna. Nam nec lacus nunc
                Nunc accumsan ultrices eros, id tempus sapien. Morbi tincidunt dolor sed augue
                volutpat gravida. Pellentesque ut accumsan tortor, iaculis porta tellus. Maecenas
                rutrum iaculis massa, quis efficitur tellus convallis ut. Etiam fringilla leo lorem,
                id ultrices risus euismod a
              </p>
            </AccordionItem>
          </Accordion>



           <div className={`${selected ? 'flex sm:hidden' : 'hidden'} gap-2 w-full sm:w-[30%] justify-center items-center px-4 `}>
                <span className="flex py-1 px-4 border-1 border-blue-700 rounded-md text-blue-700 justify-center w-[50%] sm:w-20 h-8" onClick={(event) => {
                    event.stopPropagation()
                    console.log("child event", event)
                }}>Details</span>
                <span className="flex py-1 px-4 border-1 border-blue-700 rounded-md text-blue-700 sm:w-32 w-[50%] justify-center h-8" onClick={(event) => {
                    event.stopPropagation()
                    console.log("child event", event)
                }}>Performance</span>
            </div>
      